{"version":3,"sources":["actionCreators.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["postLoginAPI","body","fetch","credentials","method","headers","Headers","then","response","text","data","error","token","getProductsList","dispatch","getState","a","type","getProductsAPI","list","reverse","json","postNewProductAPI","status","deleteProductAPI","id","App","props","onShowLoginForm","setState","state","showLoginForm","username","password","onSubmitLogin","adminLogin","onLogout","showNewProductForm","adminLogout","onChangeUsername","e","target","value","onChangePassword","onShowNewProduct","product","name","desc","price","image","isUpdate","onDeleteProduct","deleteProduct","onChangeText","key","console","log","onChangeCheck","checked","onSubmitNewProduct","createProduct","renderNewProduct","className","Card","Header","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","onChange","rows","Check","label","Button","variant","onClick","style","margin","renderLogin","ListGroup","padding","renderProductsList","productsList","map","renderProduct","index","_id","isAdmin","_price","toString","replace","maxWidth","md","Image","width","height","backgroundColor","src","rounded","borderRadius","overflow","textOverflow","color","renderAdminButton","AuthButton","NewProductButton","renderLoading","Spinner","animation","this","prevProps","prevState","length","_","isEqual","loading","Component","mapDispatchToProps","JSON","stringify","res","jsonBody","connect","ownProps","products","Boolean","window","location","hostname","match","initialState","reducers","action","store","createStore","applyMiddleware","thunk","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7294531.chunk.js","sourcesContent":["import _ from 'lodash'\n\n/**\n * Action for login admin\n * \n * @param {string} username \n * @param {string} password \n */\nexport const adminLogin = (username = '', password = '') => async (dispatch) => {\n  dispatch({ type: 'LOGIN_REQUEST' })\n  const data = JSON.stringify({\n    username,\n    password\n  })\n  const res = await postLoginAPI(data)\n  const error = res.error ? res.error : ''\n  const token = res.token ? res.token : ''\n  if (token !== '') {\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      token\n    })\n  } else {\n    dispatch({\n      type: 'LOGIN_FAILURE',\n      error\n    })\n  }\n}\n/**\n * Call API login\n * @param {json} body \n */\nconst postLoginAPI = (body) => {\n  return fetch('https://cors-anywhere.herokuapp.com/' + 'https://nodejs-api-example.herokuapp.com/login', {\n    credentials: 'same-origin',\n    method: 'POST',\n    body,\n    headers: new Headers({ 'Content-Type': 'application/json' })\n  }).then(response => {\n    return response.text().then((data) => {\n      if (data === 'Wrong username and password') {\n        return { error: data }\n      }\n      return { token: data }\n    })\n  })\n}\n/**\n * Action for admin logout\n */\nexport const adminLogout = () => (dispatch) => {\n  dispatch({ type: 'LOGIN_CLEAR' })\n}\n\n\n/**\n * Action for get all products list\n */\nexport const getProductsList = () => async (dispatch, getState) => {\n  dispatch({ type: 'GET_PRODUCTS_REQUEST' })\n  const data = await getProductsAPI()\n  dispatch({\n    type: 'GET_PRODUCTS_SUCCESS',\n    list: data.reverse()\n  })\n}\n/**\n * Call API get products list\n */\nconst getProductsAPI = () => {\n  return fetch('https://cors-anywhere.herokuapp.com/' + 'https://nodejs-api-example.herokuapp.com/products', {\n    credentials: 'same-origin',\n    method: 'GET',\n    headers: new Headers({ 'Content-Type': 'application/json' })\n  }).then(response => {\n    return response.json().then(data => data)\n  })\n}\n\n\n/**\n * Action for create new product\n */\nexport const createProduct = (data) => async (dispatch, getState) => {\n  dispatch({ type: 'CREATE_PRODUCT_REQUEST' })\n  const token = await getState().token;\n  const jsonBody = JSON.stringify(data)\n  const status = await postNewProductAPI(token, jsonBody)\n  if (status === 201) {\n    dispatch({ type: 'CREATE_PRODUCT_SUCCESS' })\n    dispatch(getProductsList())\n  } else {\n    dispatch({ type: 'CREATE_PRODUCT_FAILURE', error: 'Can not creat new product' })\n  }\n}\n/**\n * Call API create product\n * @param {string} token \n * @param {json} body \n */\nconst postNewProductAPI = (token, body) => {\n  return fetch('https://cors-anywhere.herokuapp.com/' + 'https://nodejs-api-example.herokuapp.com/product', {\n    credentials: 'same-origin',\n    method: 'POST',\n    body,\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    })\n  }).then(response => {\n    return response.status\n  })\n}\n\n\n/**\n * Action for delete product\n */\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  const token = await getState().token;\n  const status = await deleteProductAPI(token, id)\n  if (status === 204) {\n    dispatch(getProductsList())\n  }\n}\nconst deleteProductAPI = (token, id = '') => {\n  return fetch('https://cors-anywhere.herokuapp.com/' + 'https://nodejs-api-example.herokuapp.com/product/' + id, {\n    credentials: 'same-origin',\n    method: 'DELETE',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': token\n    })\n  }).then(response => {\n    return response.status\n  })\n}","import React, { Component } from 'react';\nimport { Button, Table, Form, Container, Col, Row, Card, ListGroup, Spinner, Image } from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { adminLogin, adminLogout, getProductsList, createProduct, deleteProduct } from './actionCreators'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      showLoginForm: false,\n      username: '',\n      password: '',\n\n      showNewProductForm: false,\n      name: '',\n      desc: '',\n      price: '',\n      image: '',\n      status: true,\n      isUpdate: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getProductsList()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.token !== null && this.props.token !== prevProps.token) {\n      this.setState({ showLoginForm: false })\n    }\n    if ((this.props.productsList.length > 0) && !_.isEqual(this.props.productsList, prevProps.productsList)) {\n      this.setState({\n        showLoginForm: false,\n        username: '',\n        password: '',\n        showNewProductForm: false,\n        name: '',\n        desc: '',\n        price: '',\n        image: '',\n        status: true,\n        isUpdate: false,\n      })\n    }\n  }\n\n  onShowLoginForm = () => {\n    this.setState((state) => ({ showLoginForm: !state.showLoginForm, username: '', password: '' }))\n  }\n\n  onSubmitLogin = () => {\n    const { username, password } = this.state\n    this.props.adminLogin(username, password)\n    this.setState({ username: '', password: '' })\n  }\n\n  onLogout = () => {\n    this.setState({\n      showLoginForm: false,\n      username: '',\n      password: '',\n      showNewProductForm: false,\n    })\n    this.props.adminLogout()\n  }\n\n  onChangeUsername = (e) => {\n    this.setState({ username: e.target.value })\n  }\n\n  onChangePassword = (e) => {\n    this.setState({ password: e.target.value })\n  }\n\n  onShowNewProduct = (product = {}) => {\n    if (product) {\n      const { name, desc, price, image, status } = product\n      this.setState((state) => ({\n        showNewProductForm: !state.showNewProductForm,\n        name,\n        desc,\n        price,\n        image,\n        status,\n        isUpdate: true,\n      }))\n    } else {\n      this.setState((state) => ({\n        showNewProductForm: !state.showNewProductForm,\n        name: '',\n        desc: '',\n        price: '',\n        image: '',\n        status: true,\n      }))\n    }\n  }\n\n  onDeleteProduct = (id) => {\n    this.props.deleteProduct(id)\n  }\n\n  onChangeText = (e, key = '') => {\n    console.log(e.target.value)\n    const { value } = e.target\n    this.setState({ [key]: value })\n  }\n\n  onChangeCheck = (e) => {\n    const { checked } = e.target\n    this.setState({ status: checked })\n  }\n\n  onSubmitNewProduct = () => {\n    const { name, desc, price, image, status, isUpdate } = this.state\n    const data = {\n      name,\n      desc,\n      image,\n      price,\n      status\n    }\n    if (isUpdate) {\n      //\n    }\n    this.props.createProduct(data)\n  }\n\n  renderNewProduct = () => {\n    return (\n      <div className=\"NewProductForm\">\n        <Card>\n          <Card.Header>Administrator Login</Card.Header>\n\n          <Form>\n            <div id=\"productForm\">\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"3\">\n                  Name\n              </Form.Label>\n                <Col sm=\"9\">\n                  <Form.Control type=\"text\" placeholder=\"\" value={this.state.name} onChange={(e) => this.onChangeText(e, 'name')} />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"3\">\n                  Description\n              </Form.Label>\n                <Col sm=\"9\">\n                  <Form.Control as=\"textarea\" rows=\"3\" value={this.state.desc} onChange={(e) => this.onChangeText(e, 'desc')} />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"3\">\n                  Price\n              </Form.Label>\n                <Col sm=\"9\">\n                  <Form.Control type=\"text\" placeholder=\"\" value={this.state.price} onChange={(e) => this.onChangeText(e, 'price')} />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"3\">\n                  Image url\n              </Form.Label>\n                <Col sm=\"9\">\n                  <Form.Control type=\"text\" placeholder=\"\" value={this.state.image} onChange={(e) => this.onChangeText(e, 'image')} />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"3\">\n                  Status\n              </Form.Label>\n                <Col sm=\"9\">\n                  <Form.Check type=\"checkbox\" label=\"Available\" checked={this.state.status} onChange={this.onChangeCheck} />\n                </Col>\n              </Form.Group>\n\n              <Button variant=\"success\" onClick={this.onSubmitNewProduct} style={{ margin: 20 }}>\n                Save\n            </Button>\n              <Button variant=\"primary\" onClick={this.onShowNewProduct} style={{ margin: 20 }}>\n                Cancel\n            </Button>\n            </div>\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n\n  renderLogin = () => {\n    return (\n      <div className=\"LoginForm\">\n        <Card>\n          <Card.Header>Administrator Login</Card.Header>\n          <ListGroup variant=\"flush\" style={{ padding: 10 }}>\n            <Form>\n              <Form.Group controlId=\"formBasicUsername\">\n                <Form.Control placeholder=\"Username\" value={this.state.username} onChange={this.onChangeUsername} />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChangePassword} />\n              </Form.Group>\n              {\n                this.props.error && <p id=\"errorMessage\">{this.props.error}</p>\n              }\n              <Button variant=\"success\" onClick={this.onSubmitLogin} style={{ margin: 20 }}>\n                Login\n              </Button>\n              <Button variant=\"primary\" onClick={this.onShowLoginForm} style={{ margin: 20 }}>\n                Close\n              </Button>\n            </Form>\n          </ListGroup>\n        </Card>\n      </div>\n    )\n  }\n\n  renderProductsList = () => {\n    return (\n      <div className=\"renderProductsList\">\n        {\n          this.props.productsList.map(this.renderProduct)\n        }\n      </div>\n    )\n  }\n\n  renderProduct = (product, index) => {\n    const { _id, name, desc, image, price, status } = product\n    const isAdmin = this.props.token !== null\n    const _price = (price && price !== '') ? price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : ''\n\n    return (\n      <Card key={_id} style={{ maxWidth: 700 }}>\n        <Row>\n          <Col md={5}>\n            {\n              (image !== '')\n                ? <Image id=\"productImage\" style={{ width: 240, height: 180, margin: 10, backgroundColor: 'silver' }} src={image} rounded />\n                : <div style={{ width: 240, height: 180, margin: 10, backgroundColor: 'silver', borderRadius: 4 }}></div>\n            }\n          </Col>\n          <Col style={{ padding: 20 }}>\n            <Row><h3>{name}</h3></Row>\n            <Row><p style={{ maxWidth: 360, overflow: 'hidden', textOverflow: 'ellipsis' }}>{desc}</p></Row>\n            <Row>\n              <Col><p style={{ color: '#FF7733' }}>Price: {_price}</p></Col>\n              <Col><p style={{ color: status ? '#7EDF46' : '#F7E833' }}>Product is {status ? 'Available' : 'Unavailable'}</p></Col>\n            </Row>\n            {\n              isAdmin && (\n                <Row>\n                  <Button variant=\"warning\" onClick={() => this.onShowNewProduct(product)} style={{ margin: 20 }}>\n                    Update Product\n                  </Button>\n                  <Button variant=\"danger\" onClick={() => this.onDeleteProduct(_id)} style={{ margin: 20 }}>\n                    Delete Product\n                  </Button>\n                </Row>\n              )\n            }\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n\n  renderAdminButton = () => {\n    let AuthButton\n    let NewProductButton\n    if (!this.state.showLoginForm && !this.state.showNewProductForm) {\n      if (this.props.token === null) {\n        AuthButton = (\n          <Button id=\"loginBtn\" variant=\"primary\" onClick={this.onShowLoginForm}>\n            Admin Login\n          </Button>\n        )\n      } else {\n        AuthButton = (\n          <Button id=\"loginBtn\" variant=\"danger\" onClick={this.onLogout}>\n            Logout\n          </Button>\n        )\n      }\n    }\n\n    if (!this.state.showNewProductForm && this.props.token !== null) {\n      NewProductButton = (\n        <Button id=\"createBtn\" variant=\"success\" onClick={this.onShowNewProduct}>\n          New Product\n        </Button>\n      )\n    }\n    return (\n      <div>\n        {NewProductButton}\n        {AuthButton}\n      </div>\n    )\n  }\n\n  renderLoading = () => {\n    return (\n      <div className=\"Loading\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n          <h1>Simple eCommerce</h1>\n        </div>\n        <div className=\"Content\">\n          {this.renderAdminButton()}\n          {this.state.showLoginForm && this.renderLogin()}\n          {this.state.showNewProductForm && this.renderNewProduct()}\n          {(!this.state.showLoginForm && !this.state.showNewProductForm) && this.renderProductsList()}\n        </div>\n        {this.props.loading && this.renderLoading()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  loading: state.loading,\n  productsList: state.products,\n  error: state.error,\n  token: state.token,\n})\n\nconst mapDispatchToProps = ({\n  adminLogin,\n  adminLogout,\n  getProductsList,\n  createProduct,\n  deleteProduct,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  loading: false,\n  products: [],\n  error: null,\n  token: null,\n}\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: initialState.error,\n        token: initialState.token\n      }\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        token: action.token,\n        error: initialState.error\n      }\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        token: initialState.token,\n        error: action.error\n      }\n    case 'LOGIN_CLEAR':\n      return {\n        ...state,\n        loading: initialState.loading,\n        token: initialState.token,\n        error: action.error\n      }\n\n    case 'GET_PRODUCTS_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      }\n    case 'GET_PRODUCTS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        products: action.list,\n      }\n\n    case 'CREATE_PRODUCT_REQUEST':\n      return {\n        ...state,\n        loading: true,\n      }\n    case 'CREATE_PRODUCT_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n      }\n    case 'CREATE_PRODUCT_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducers\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nconst Root = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}